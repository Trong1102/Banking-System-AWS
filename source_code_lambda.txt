Source code lambda 28/6

1.LOGIN WEB APP 
import json
import pymysql
import datetime 

def lambda_handler(event, context):
    # Lấy thông tin người dùng từ yêu cầu
    username = event.get('username')
    password = event.get('password')
    
    host = "mydata.clcgakosy2ph.ap-southeast-1.rds.amazonaws.com"
    user = "trongnt"
    password_db = "trong1011"
    dbname = "test"
    
    try:
        connection = pymysql.connect(host=host, user=user, password=password_db, db=dbname)
        cursor = connection.cursor()
        
        sql = f"select Account_id, Username, Password from bank_sys.User_Accounts"
        
        
        cursor.execute(sql)
        result = cursor.fetchall()
        login_success = False
        account_id = None
        
        for row in result:
            if username == row[1] and password == row[2]:
                login_success = True
                account_id = row[0]
                break
        
        status = 'success' if login_success else 'failed'
        error_message = '' if login_success else 'Invalid username or password'
        
        log_sql = """
        INSERT INTO bank_sys.Login_Log (Customer_id, Username, password, status, Error_message)
        VALUES (%s, %s, %s, %s, %s)
        """
        cursor.execute(log_sql, (account_id, username, password, status, error_message))
        connection.commit()
        
        if login_success:
            return {
                'statusCode': 200,
                'data': json.dumps({'message': 'Login successful','account_id':account_id})
            }
        return {
            'statusCode': 401,
            'data': json.dumps({'message': 'Invalid username or password'})
        }
        cursor.close()
        connection.close()
    except Exception as e:
        print('MySQL Exception:', str(e))
        raise


2.REGISTER

import json
import pymysql

def lambda_handler(event, context):
    
    # username = event.get('username')
    # password = event.get('password')
    # age = event.get('age')
    # education = event.get('education')
    # marital_status = event.get('maritalStatus')
    
    customer_name = event.get('customer_name')
    citizen_number = event.get('citizen_number')
    phone_number = event.get('phone_number')
    date_of_birth = event.get('date_of_birth')
    gender = event.get('gender')
    email = event.get('email')
    
    
    
    host = "mydata.clcgakosy2ph.ap-southeast-1.rds.amazonaws.com"
    user = "trongnt"
    password_db = "trong1011"
    dbname = "test"
    
    try:
        connection = pymysql.connect(host=host, user=user, password=password_db, db=dbname)
        cursor = connection.cursor()
        
        # Check if username already exists
        cursor.execute("SELECT COUNT(*) FROM bank_sys.Customers WHERE citizen_number = %s", (citizen_number,))
        if cursor.fetchone()[0] > 0:
            return {
                'statusCode': 400,
                'body': json.dumps({'message': 'Customer already exists in system'})
            }
        
        # Insert new user
        sql = """
            INSERT INTO bank_sys.Customers (customer_name, citizen_number, phone_number, date_of_birth, gender, email)
            VALUES (%s, %s, %s, %s, %s, %s)
        """
        cursor.execute(sql, (customer_name, citizen_number, phone_number, date_of_birth, gender, email))
        connection.commit()
        
        response = {
            'statusCode': 200,
            'body': json.dumps({'message': 'Registration successful'})
        }
        
    except Exception as e:
        response = {
            'statusCode': 500,
            'body': json.dumps({'message': str(e)})
        }
    finally:
        cursor.close()
        connection.close()
    
    return response

3.CREATE PERSONAL ACCOUNT 

import json
import pymysql

def lambda_handler(event, context):
    # Kết nối tới cơ sở dữ liệu
    host = "mydata.clcgakosy2ph.ap-southeast-1.rds.amazonaws.com"
    user = "trongnt"
    password_db = "trong1011"
    dbname = "test"

    # Lấy thông tin từ body của request
    # body = json.loads(event['body'])
    citizen_number = event.get('citizen_number')
    username = event.get('username')
    password = event.get('password')
    verification = event.get('verification')
    # location = event.get('location')
    # business_name = event.get('business_name')
    # business_type = event.get('business_type')  
    
    
    try:
        connection = pymysql.connect(host=host, user=user, password=password_db, db=dbname)
        cursor = connection.cursor()
        
        sql_select = "SELECT customer_id FROM bank_sys.Customers WHERE citizen_number = %s"
        cursor.execute(sql_select, (citizen_number,))
        result = cursor.fetchone()
        customer_id = result[0]
        
        sql_check = f"select Username from bank_sys.User_Accounts"
        cursor.execute(sql_check)
        result = cursor.fetchall()
        
        for row in result:
            if username == row[0]:
                return {
                    'statusCode': 500,
                    'body': json.dumps({'message': 'Username already exist please choose another username'})
                }
        
        # Tạo câu lệnh SQL
        sql = """
        INSERT INTO bank_sys.Personal_Accounts (customer_id, username, password, verification)
        VALUES (%s, %s, %s, %s)
        """
        cursor.execute(sql, (customer_id, username, password, verification))
        connection.commit()
        response = {
            'statusCode': 200,
            'body': json.dumps({'message': 'Account created successfully'})
        }
    except Exception as e:
        print(f"Error: {str(e)}")
        response = {
            'statusCode': 500,
            'body': json.dumps({'message': 'Error creating account', 'error': str(e)})
        }
    finally:
        connection.close()

    return response

4.CREATE BUSINESS ACCOUNT 

import json
import pymysql

def lambda_handler(event, context):
    # Kết nối tới cơ sở dữ liệu
    host = "mydata.clcgakosy2ph.ap-southeast-1.rds.amazonaws.com"
    user = "trongnt"
    password_db = "trong1011"
    dbname = "test"

    # Lấy thông tin từ body của request
    # body = json.loads(event['body'])
    citizen_number = event.get('citizen_number')
    username = event.get('username')
    password = event.get('password')
    verification = event.get('verification')
    location = event.get('location')
    business_name = event.get('business_name')
    business_type = event.get('business_type')  
    
    
    try:
        connection = pymysql.connect(host=host, user=user, password=password_db, db=dbname)
        cursor = connection.cursor()
        
        sql_select = "SELECT customer_id FROM bank_sys.Customers WHERE citizen_number = %s"
        cursor.execute(sql_select, (citizen_number,))
        result = cursor.fetchone()
        customer_id = result[0]
        
        sql_check = f"select Username from bank_sys.User_Accounts"
        cursor.execute(sql_check)
        result = cursor.fetchall()
        
        for row in result:
            if username == row[0]:
                return {
                    'statusCode': 500,
                    'body': json.dumps({'message': 'Username already exist please choose another username'})
                }
        # Tạo câu lệnh SQL
        sql = """
        INSERT INTO bank_sys.Business_Accounts (customer_id, username, password, verification, location, business_name, Business_Type)
        VALUES (%s, %s, %s, %s, %s, %s, %s)
        """
        cursor.execute(sql, (customer_id, username, password, verification, location, business_name, business_type))
        connection.commit()
        response = {
            'statusCode': 200,
            'body': json.dumps({'message': 'Account created successfully'})
        }
    except Exception as e:
        print(f"Error: {str(e)}")
        response = {
            'statusCode': 500,
            'body': json.dumps({'message': 'Error creating account', 'error': str(e)})
        }
    finally:
        connection.close()

    return response

5.CHECK CITIZEN

import json
import pymysql

def lambda_handler(event, context):
    
    citizen_number = event.get('citizen_number')
    
    host = "mydata.clcgakosy2ph.ap-southeast-1.rds.amazonaws.com"
    user = "trongnt"
    password_db = "trong1011"
    dbname = "test"
    
    try:
        connection = pymysql.connect(host=host, user=user, password=password_db, db=dbname)
        cursor = connection.cursor()
        
        # Check if username already exists
        cursor.execute("SELECT COUNT(*) FROM bank_sys.Customers WHERE citizen_number = %s", (citizen_number,))
        if cursor.fetchone()[0] > 0:
            return {
                'statusCode': 200,
                'body': json.dumps({'message': 'Customer already exists in system, let create an account.'})
            }
        
        response = {
            'statusCode': 300,
            'body': json.dumps({'message': 'Profile customer not exist in system, please register before create account'})
        }
        
    except Exception as e:
        response = {
            'statusCode': 500,
            'body': json.dumps({'message': str(e)})
        }
    finally:
        cursor.close()
        connection.close()
    
    return response


6.GET USER DATA
import json
import pymysql

def lambda_handler(event, context):
    account_id = event.get('account_id')
    
    host = "mydata.clcgakosy2ph.ap-southeast-1.rds.amazonaws.com"
    user = "trongnt"
    password_db = "trong1011"
    dbname = "test"
    
    try:
        connection = pymysql.connect(host=host, user=user, password=password_db, db=dbname)
        cursor = connection.cursor()
        
        if account_id[0:2] == 'BA':
            sql = f"""select a.Business_Name , a.Account_number , a.Location ,a.balance, c.phone_number 
                        from bank_sys.Business_Accounts a
                        join bank_sys.Customers c on a.Customer_id = c.Customer_ID
                        where a.Account_id = %s"""
            cursor.execute(sql, (account_id,))
            row = cursor.fetchone()
            balance = float(row[3])
            if row:
                response = {
                    'statusCode': 200,
                    'data': json.dumps({
                        'business_name': row[0],
                        'account_number': row[1],
                        'location':row[2],
                        'balance': balance,
                        'phone_number':row[4]
                    })
                }
            else:
                response = {
                    'statusCode': 404,
                    'body': json.dumps({'message': 'User not found'})
                }
        if account_id[0:2] == 'PA':
            sql = f"""select c.customer_name , a.Account_number ,a.balance, c.phone_number 
                        from bank_sys.Personal_Accounts a
                        join bank_sys.Customers c on a.Customer_id = c.Customer_ID
                        where a.Account_id = %s"""
            cursor.execute(sql, (account_id,))
            row = cursor.fetchone()
            balance = float(row[2])
            if row:
                response = {
                    'statusCode': 200,
                    'data': json.dumps({
                        'customer_name': row[0],
                        'account_number': row[1],
                        'balance': balance,
                        'phone_number':row[3]
                    })
                }
            else:
                response = {
                    'statusCode': 404,
                    'body': json.dumps({'message': 'User not found'})
                }
    except Exception as e:
        response = {
            'statusCode': 500,
            'body': json.dumps({'message': str(e)})
        }
    finally:
        connection.close()
    
    return response
